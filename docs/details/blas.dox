/**
\addtogroup arrayfire_func
@{
\defgroup blas_func_dot dot

\ingroup blas_mat

\brief Calculate the dot product of a vector

Scalar dot product between two vectors.  Also referred to as the inner
product.

This function returns the scalar product of two equal sized vectors or
between a matrix and a vector. The second operand needs to be a vector
in either case.

\image html matrix_vector_dot_product.png

=======================================================================

\defgroup blas_func_matmul matmul
\ingroup blas_mat

\brief Matrix multiplication using array

Performs a matrix multiplication on the two input arrays after performing the
operations specified in the options. The operations are done while reading the
data from memory. This results in no additional memory being used for temporary
buffers.

Batched matrix multiplications are supported. Given below are the supported
formats for given matrices A and B.

| Input Matrix A             | Input Matrix B             | Output Matrix Size          |
|:--------------------------:|:--------------------------:|:---------------------------:|
| \f$ \{ M, K,  1,  1 \} \f$ | \f$ \{ K, N,  1,  1 \} \f$ |  \f$ \{ K, N,  1,  1 \} \f$ |
| \f$ \{ M, K, b2, b3 \} \f$ | \f$ \{ K, N, b2, b3 \} \f$ |  \f$ \{ K, N, b2, b3 \} \f$ |
| \f$ \{ M, K,  1,  1 \} \f$ | \f$ \{ K, N, b2, b3 \} \f$ |  \f$ \{ K, N, b2, b3 \} \f$ |
| \f$ \{ M, K, b2, b3 \} \f$ | \f$ \{ K, N,  1,  1 \} \f$ |  \f$ \{ K, N, b2, b3 \} \f$ |

For the last two entries in the above table, the 2D matrix is broadcasted to
match the dimensions of 3D/4D array. This broadcast doesn't involve any additional
memory allocations either on host or device.

\note Sparse support was added to ArrayFire in v3.4.0. This function can be used
for Sparse-Dense matrix multiplication. See the notes of the function for usage
and restrictions.


=======================================================================

\defgroup blas_func_transpose transpose
\ingroup blas_mat
\ingroup manip_mat

\brief Matrix Transpose

Transposes a matrix

=======================================================================

@}
*/
